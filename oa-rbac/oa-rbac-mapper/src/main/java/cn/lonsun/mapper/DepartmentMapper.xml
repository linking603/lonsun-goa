<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lonsun.mapper.DepartmentMapper" >
  <resultMap id="BaseResultMap" type="cn.lonsun.entity.Department" >
    <id column="department_id" property="departmentId" jdbcType="DECIMAL" />
    <result column="department_full_name" property="departmentFullName" jdbcType="VARCHAR" />
    <result column="department_short_name" property="departmentShortName" jdbcType="VARCHAR" />
    <result column="department_type" property="departmentType" jdbcType="DECIMAL" />
    <result column="department_parent_id" property="departmentParentId" jdbcType="DECIMAL" />
    <result column="department_parent_ids" property="departmentParentIds" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="sort_num" property="sortNum" jdbcType="DECIMAL" />
    <result column="record_status" property="recordStatus" jdbcType="DECIMAL" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="DECIMAL" />
    <result column="create_orgin_id" property="createOrginId" jdbcType="DECIMAL" />
    <result column="create_unit_id" property="createUnitId" jdbcType="DECIMAL" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="DECIMAL" />
    <result column="update_orgin_id" property="updateOrginId" jdbcType="DECIMAL" />
    <result column="update_unit_id" property="updateUnitId" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    department_id, department_full_name, department_short_name, department_type, department_parent_id, 
    department_parent_ids, remarks, sort_num, record_status, create_date, create_user_id, 
    create_orgin_id, create_unit_id, update_date, update_user_id, update_orgin_id, update_unit_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.lonsun.entity.DepartmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oa_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.math.BigDecimal" >
    select 
    <include refid="Base_Column_List" />
    from oa_department
    where department_id = #{departmentId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal" >
    delete from oa_department
    where department_id = #{departmentId,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="cn.lonsun.entity.DepartmentExample" >
    delete from oa_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lonsun.entity.Department" >
    insert into oa_department (department_id, department_full_name,
      department_short_name, department_type, department_parent_id, 
      department_parent_ids, remarks, sort_num, 
      record_status, create_date, create_user_id, 
      create_orgin_id, create_unit_id, update_date, 
      update_user_id, update_orgin_id, update_unit_id
      )
    values (#{departmentId,jdbcType=DECIMAL}, #{departmentFullName,jdbcType=VARCHAR}, 
      #{departmentShortName,jdbcType=VARCHAR}, #{departmentType,jdbcType=DECIMAL}, #{departmentParentId,jdbcType=DECIMAL}, 
      #{departmentParentIds,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{sortNum,jdbcType=DECIMAL}, 
      #{recordStatus,jdbcType=DECIMAL}, #{createDate,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=DECIMAL}, 
      #{createOrginId,jdbcType=DECIMAL}, #{createUnitId,jdbcType=DECIMAL}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=DECIMAL}, #{updateOrginId,jdbcType=DECIMAL}, #{updateUnitId,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.lonsun.entity.Department" >
    insert into oa_department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="departmentFullName != null" >
        department_full_name,
      </if>
      <if test="departmentShortName != null" >
        department_short_name,
      </if>
      <if test="departmentType != null" >
        department_type,
      </if>
      <if test="departmentParentId != null" >
        department_parent_id,
      </if>
      <if test="departmentParentIds != null" >
        department_parent_ids,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="sortNum != null" >
        sort_num,
      </if>
      <if test="recordStatus != null" >
        record_status,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createOrginId != null" >
        create_orgin_id,
      </if>
      <if test="createUnitId != null" >
        create_unit_id,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateOrginId != null" >
        update_orgin_id,
      </if>
      <if test="updateUnitId != null" >
        update_unit_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="departmentId != null" >
        #{departmentId,jdbcType=DECIMAL},
      </if>
      <if test="departmentFullName != null" >
        #{departmentFullName,jdbcType=VARCHAR},
      </if>
      <if test="departmentShortName != null" >
        #{departmentShortName,jdbcType=VARCHAR},
      </if>
      <if test="departmentType != null" >
        #{departmentType,jdbcType=DECIMAL},
      </if>
      <if test="departmentParentId != null" >
        #{departmentParentId,jdbcType=DECIMAL},
      </if>
      <if test="departmentParentIds != null" >
        #{departmentParentIds,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortNum != null" >
        #{sortNum,jdbcType=DECIMAL},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=DECIMAL},
      </if>
      <if test="createOrginId != null" >
        #{createOrginId,jdbcType=DECIMAL},
      </if>
      <if test="createUnitId != null" >
        #{createUnitId,jdbcType=DECIMAL},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=DECIMAL},
      </if>
      <if test="updateOrginId != null" >
        #{updateOrginId,jdbcType=DECIMAL},
      </if>
      <if test="updateUnitId != null" >
        #{updateUnitId,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lonsun.entity.DepartmentExample" resultType="java.lang.Integer" >
    select count(*) from oa_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oa_department
    <set >
      <if test="record.departmentId != null" >
        department_id = #{record.departmentId,jdbcType=DECIMAL},
      </if>
      <if test="record.departmentFullName != null" >
        department_full_name = #{record.departmentFullName,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentShortName != null" >
        department_short_name = #{record.departmentShortName,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentType != null" >
        department_type = #{record.departmentType,jdbcType=DECIMAL},
      </if>
      <if test="record.departmentParentId != null" >
        department_parent_id = #{record.departmentParentId,jdbcType=DECIMAL},
      </if>
      <if test="record.departmentParentIds != null" >
        department_parent_ids = #{record.departmentParentIds,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.sortNum != null" >
        sort_num = #{record.sortNum,jdbcType=DECIMAL},
      </if>
      <if test="record.recordStatus != null" >
        record_status = #{record.recordStatus,jdbcType=DECIMAL},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=DECIMAL},
      </if>
      <if test="record.createOrginId != null" >
        create_orgin_id = #{record.createOrginId,jdbcType=DECIMAL},
      </if>
      <if test="record.createUnitId != null" >
        create_unit_id = #{record.createUnitId,jdbcType=DECIMAL},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=DECIMAL},
      </if>
      <if test="record.updateOrginId != null" >
        update_orgin_id = #{record.updateOrginId,jdbcType=DECIMAL},
      </if>
      <if test="record.updateUnitId != null" >
        update_unit_id = #{record.updateUnitId,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oa_department
    set department_id = #{record.departmentId,jdbcType=DECIMAL},
      department_full_name = #{record.departmentFullName,jdbcType=VARCHAR},
      department_short_name = #{record.departmentShortName,jdbcType=VARCHAR},
      department_type = #{record.departmentType,jdbcType=DECIMAL},
      department_parent_id = #{record.departmentParentId,jdbcType=DECIMAL},
      department_parent_ids = #{record.departmentParentIds,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      sort_num = #{record.sortNum,jdbcType=DECIMAL},
      record_status = #{record.recordStatus,jdbcType=DECIMAL},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=DECIMAL},
      create_orgin_id = #{record.createOrginId,jdbcType=DECIMAL},
      create_unit_id = #{record.createUnitId,jdbcType=DECIMAL},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=DECIMAL},
      update_orgin_id = #{record.updateOrginId,jdbcType=DECIMAL},
      update_unit_id = #{record.updateUnitId,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lonsun.entity.Department" >
    update oa_department
    <set >
      <if test="departmentFullName != null" >
        department_full_name = #{departmentFullName,jdbcType=VARCHAR},
      </if>
      <if test="departmentShortName != null" >
        department_short_name = #{departmentShortName,jdbcType=VARCHAR},
      </if>
      <if test="departmentType != null" >
        department_type = #{departmentType,jdbcType=DECIMAL},
      </if>
      <if test="departmentParentId != null" >
        department_parent_id = #{departmentParentId,jdbcType=DECIMAL},
      </if>
      <if test="departmentParentIds != null" >
        department_parent_ids = #{departmentParentIds,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortNum != null" >
        sort_num = #{sortNum,jdbcType=DECIMAL},
      </if>
      <if test="recordStatus != null" >
        record_status = #{recordStatus,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=DECIMAL},
      </if>
      <if test="createOrginId != null" >
        create_orgin_id = #{createOrginId,jdbcType=DECIMAL},
      </if>
      <if test="createUnitId != null" >
        create_unit_id = #{createUnitId,jdbcType=DECIMAL},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=DECIMAL},
      </if>
      <if test="updateOrginId != null" >
        update_orgin_id = #{updateOrginId,jdbcType=DECIMAL},
      </if>
      <if test="updateUnitId != null" >
        update_unit_id = #{updateUnitId,jdbcType=DECIMAL},
      </if>
    </set>
    where department_id = #{departmentId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lonsun.entity.Department" >
    update oa_department
    set department_full_name = #{departmentFullName,jdbcType=VARCHAR},
      department_short_name = #{departmentShortName,jdbcType=VARCHAR},
      department_type = #{departmentType,jdbcType=DECIMAL},
      department_parent_id = #{departmentParentId,jdbcType=DECIMAL},
      department_parent_ids = #{departmentParentIds,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      sort_num = #{sortNum,jdbcType=DECIMAL},
      record_status = #{recordStatus,jdbcType=DECIMAL},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=DECIMAL},
      create_orgin_id = #{createOrginId,jdbcType=DECIMAL},
      create_unit_id = #{createUnitId,jdbcType=DECIMAL},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=DECIMAL},
      update_orgin_id = #{updateOrginId,jdbcType=DECIMAL},
      update_unit_id = #{updateUnitId,jdbcType=DECIMAL}
    where department_id = #{departmentId,jdbcType=DECIMAL}
  </update>
</mapper>